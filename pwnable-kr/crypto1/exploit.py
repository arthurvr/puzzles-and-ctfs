from pwn import *
import hashlib

def get_ciphertext(id):
    p = remote('pwnable.kr', 9006)

    p.recvuntil(b'ID')
    p.sendline(bytes(id, encoding='utf-8'))
    p.recvuntil(b'PW')
    p.sendline(b'')

    response = p.recvuntil(b')')

    p.close()
    return response[response.find(b'(') + 1 : response.find(b')')]


cookie_length = 49
possible_chars = '-_abcdefghijklmnopqrstuvwxyz0123456789'
cookie = ''
for i in range(0, cookie_length):
    block_offset = cookie_length // 16 + 1
    pad_length = int(block_offset * 16 - 3 - i)
    correct_ciphertext = get_ciphertext('-' * pad_length)[:block_offset * 32]

    for c in possible_chars:
        packet = '-' * (pad_length + 2) + cookie[:i] + c
        calculated_ciphertext = get_ciphertext(packet)[:block_offset * 32]
        if correct_ciphertext == calculated_ciphertext:
            cookie += c
            break

print('Cookie: {0}'.format(cookie))

admin_pw = hashlib.sha256(b'admin' + cookie.encode()).hexdigest()
print('That makes the admin password {0}'.format(admin_pw))